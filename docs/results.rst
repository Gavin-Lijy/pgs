Expected Results
======================

A successful PGS execution will generate a ``result`` folder which composed of 4 subfolders: 

- ``probMat`` : contains the input hdf5 TAD-TAD probability matrix (if option 1 or 2 is used).

- ``actDist`` : contains intermediate files generated by A-step (restraint assignment step). A file is generated at each A/M iteration, and will be used in the subsequent M-step (model optimization).

- ``structure`` : contains structure information files. One ``.hms`` file has snapshot coordinates of a model with different optimization steps depending on theta parameters.

- ``report`` : contains preliminary analysis with some plots.


.. topic:: Tools to get results shown under the ``report`` directory

        Once all PGS tasks are completed (e.g. "Workflow successfully completed all tasks" printed on the screen or in ``$PROJECT_DIR/pyflow.data/logs/pyflow_log.txt``), users can analyze the final structures using alberlab analysis tools. The following are some examples of how to extract information from the structure-population using Python.

        Identify which model you would like to see, e.g. result/structure/copy0.hms. You can check group names in the file using a simple bash command:
	::

		$ h5ls result/structure/copy0.hms


	And something like this will appear:
            
	::

                0.01b                    Group
                0.01a                    Group
                0.01                     Group
                0.05                     Group
                0.1                      Group
                0.2                      Group
                1                        Group
                genome                   Dataset {SCALAR}
                idx                      Dataset {2320}


                                   

       	In that example, the "idx" has information of 2320 TADs and it saves iteration snapshots at theta = {1, .., 0.01, 0.01a, 0.01b}. Thus the final structure is in group "0.01b" (at theta level p=0.01 there are 3 A/M iteration cycles).


* Getting the coordinates
	::

                import alab
                import sys
                hmsfile = 'result/structure/copy0.hms
                problvl = '0.01a'
                hms = alab.modelstructures(hmsfile, [problvl])
                TADidx = hms.idx  #TADs information
                xyz = hms[0].xyz #diploid set of coordinates


    Now the user can use the coordinates, stored in ``xyz``, to do any analysis. The TAD information with genomic location is stored in ```TADidx``` variable. In the following we provide some other usage of coordinates.
	

* Getting the contact probability map 
    We show example lines on how to get contact probability maps under ``result/report/heatmap`` and ``result/report/intraMatrix```

	::

                import alab
                import sys
                write a code here....................

* Getting the radial position
    Radial position of a TAD is calculated by the average radial positions across the structure population of that TAD. 0 marks the center of nucleus, and 1 marks nuclear envelope.

	::

                import alab
                import sys
                write code...........................




